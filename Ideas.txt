03/02/2023
we created the function compare to avoid using multiple if else statement
if my caluculations were correct we would need 30 if else.
then we had in idea about looping through functions params.
this led to significant reduce of boilerplate code.

04/02/2023

* We came to realize that if we read the file the same manner every time the stack 
will have the same orders of tiles
the players after playing so many games can know the content of the tile before playing
at first we thought about mixing the order of the stack by messing up with addresses of the tiles
but then fortunatly I came back to my senses and got convinced that swapping content is much more better
and more easier to manipulate, my idea is like shooting myself in the foot

* We realized that we had to check every time if a pointer is null so we came up with a great idea to of 
creating a function that checks if pointer is null no matter it's type after casting to void.
(creating a function to reduce effort is never a great idea it's a must).


12/02/2022
I watched a long video titled how I program in C here is the link https://www.youtube.com/watch?v=443UNeGrFoM&t=2805s&ab_channel=EskilSteenberg
on 31:43, Eskil Steenberg talked about a better naming convention
on the stack we had swap nodes We thought that stack gives us only acess to the top but we created a function to swap nodes
in the stack this can violate the concept but who cares

we changed the grid, at first hand the grid is only 2dArray of tiles than we thought it will be diff to check if a square has a
tile or not , of course we can check for null pointer , but we can do better as always , 2d array of squares where every square has
pointer to Tile and state enum  {empty , occupied}