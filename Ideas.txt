03/02/2023
we created the function compare to avoid using multiple if else statement
if my caluculations were correct we would need 30 if else.
then we had in idea about looping through functions params.
this led to significant reduce of boilerplate code.

04/02/2023

* We came to realize that if we read the file the same manner every time the stack 
will have the same orders of tiles
the players after playing so many games can know the content of the tile before playing
at first we thought about mixing the order of the stack by messing up with addresses of the tiles
but then fortunatly I came back to my senses and got convinced that swapping content is much more better
and more easier to manipulate, my idea is like shooting myself in the foot

* We realized that we had to check every time if a pointer is null so we came up with a great idea to of 
creating a function that checks if pointer is null no matter it's type after casting to void.
(creating a function to reduce effort is never a great idea it's a must).


12/02/2022
I watched a long video titled how I program in C here is the link https://www.youtube.com/watch?v=443UNeGrFoM&t=2805s&ab_channel=EskilSteenberg
on 31:43, Eskil Steenberg talked about a better naming convention
on the stack we had swap nodes We thought that stack gives us only acess to the top but we created a function to swap nodes
in the stack this can violate the concept but who cares

we changed the grid, at first hand the grid is only 2dArray of tiles than we thought it will be diff to check if a square has a
tile or not , of course we can check for null pointer , but we can do better as always , 2d array of squares where every square has
pointer to Tile and state enum  {empty , occupied}

13/02/2023

After one day writing a function to print tiles and grid, We thought in the long run will be very difficult 
to work . so We came to the conclusion that we can have em empty image grid every move we put an image tile
in the grid 
what about adding an attribute on Tile struct played_by

15/02/2023

I guess in Game struct having an array of id_players is inefficient , just pointers to the Player Struct is better
For game_inti function we had problems passing a whole array because assign

17/02/2023

is it better to have an array of pointer to Meepls in meeples_arr inside struct Plyaer 
or 
an array of struct of Meeples ???

20/02/2012
after choosing the (x,y) for a tile to put in the grid 
==> is (x,y) is EMPTY or OCCPIED 
==> if EMPTY we loop throught the neighbors of that (x,y) and at least one of them should me OCCPIED
==> if so we check the compatibility of the borders 
==> if all border are compatible in only one way we put the tile directly if not we ask the user to rotate the tile. 


22/02/2023

Watching so many primegean videos on youtube talking about Rust Result Type and how it helps to improve code and catch error fast
we dicided to implemnt something similar Resutl Type whis has the Ok variant which means that some rules are being accepted
if not we return exactly what went wrong so it becomes more explicite better then Null 

26/02/2023

Did the rotation stuff and more validation

02/03/2023
Our philosophy is to force valid action then the user chooses Not the user chooses and we validate;

first we thought only about struct OPEN_SQUARES having an array of valid coordiantes.
So we said if we tought about caluculating early valid postions why not early mat borders also.
this will make us either genuis or just making things more and more ........

11/03/2023

tile is popped from the stack.
return all possible positions where we can put the tile.
suggest to the user to choose a a square.
if the match is only possible with a rotation we rotate the tile first.
we put the tile in the square 
we update the OPEN_SQUARES array by adding new squares
we suggest to the user if he wants to put a meeple


---------------------------

Am thinking about creating another data structure Valid_squares

OPEN_SQUARES is used after putting a tile successfully on the grid 

Valid_squares will be used to after popping a tile from  the stack

n = Number of possible ways we can put the tile on x , y coordiantes where : 1 <= n <= 4;  
valid squares = [{x1 , y1, n [1, 0 , 0 , 1]} , {x2, y2, n , [1 , 1 ,0 , 0]}]
---------------------------

17/03/2023
we need to initialize 8 meeples for every player.
MEEPLES_NUM 7 or 8 ?
